heat_template_version: 2013-05-23

description: "Test template for Matrix training"

parameters:
  image:
    type: string
    default: CentOS 6.5
    constraints:
    - allowed_values:
      - CentOS 6.5
      description: Must be a supported operating system.

  leader_flavor:
    label: Leader Server Size
    description: |
      Required: Rackspace Cloud Server flavor to use. The size is based on the
      amount of RAM for the provisioned server.
    type: string
    default: 8 GB Performance
    constraints:
    - allowed_values:
      - 8 GB Performance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  compute_flavor:
    label: Compute Server Size
    description: |
      Required: Rackspace Cloud Server flavor to use. The size is based on the
      amount of RAM for the provisioned server.
    type: string
    default: 60 GB Performance
    constraints:
    - allowed_values:
      - 60 GB Performance
      - 90 GB Performance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  compute_server_count:
    label: Compute Server Count
    type: number
    default: 1
    constraints:
    - range:
        min: 0
        max: 7
      description: Must be between 0 and 7 servers.

  network_range:
    label: Private Network CIDR
    description: Private Network to use for Matrix Communication
    type: string
    default: 192.168.224.0/20

  child_template:
    type: string
    default: https://raw.githubusercontent.com/brint/actian-matrix/master/matrix-compute.yaml

  kitchen:
    label: Kitchen
    description: |
      URL for the kitchen to use, fetched using git
    type: string
    default: https://github.com/brint/actian-matrix

  chef_version:
    label: Chef Version
    description: Version of chef client to use
    type: string
    default: 11.16.2

  iso_url:
    type: string
    default: ""

resources:
  root_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  ssh_key:
    type: "OS::Nova::KeyPair"
    properties:
      name: { get_param: "OS::stack_id" }
      save_private_key: true

  # matrix_network:
  #  type: Rackspace::Cloud::Network
  #  properties:
  #    label: { get_param: "OS::stack_id" }
  #    cidr: { get_param: network_range }

  compute_servers:
    type: "OS::Heat::ResourceGroup"
    properties:
      count: { get_param: compute_server_count }
      resource_def:
        type: { get_param: child_template }
        properties:
          image: { get_param: image }
          flavor: { get_param: compute_flavor }
          root_password: { get_attr: [root_password, value] }
          # network: { get_resource: matrix_network }
          ssh_keypair_name: { get_resource: ssh_key }
          ssh_private_key: { get_attr: [ssh_key, private_key] }
          ssh_public_key: { get_attr: [ssh_key, public_key] }
          parent_stack_id: { get_param: "OS::stack_id" }

  leader_server:
    type: "Rackspace::Cloud::Server"
    depends_on: compute_servers
    properties:
      name: matrix-leader
      flavor: { get_param: leader_flavor }
      image: { get_param: image }
      key_name: { get_resource: ssh_key }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
      networks:
      - uuid: "00000000-0000-0000-0000-000000000000"
      - uuid: "11111111-1111-1111-1111-111111111111"
      # - uuid: { get_resource: matrix_network }

  leader_server_setup:
    type: "OS::Heat::ChefSolo"
    depends_on:
    - leader_server
    properties:
      username: root
      private_key: { get_attr: [ssh_key, private_key] }
      host: { get_attr: [leader_server, accessIPv4] }
      kitchen: { get_param: kitchen }
      chef_version: { get_param: chef_version }
      node:
        matrix:
          iso_url: { get_param: iso_url }
          compute_nodes: { get_attr: [ compute_servers, privateIPv4 ] }
          root_password: { get_attr: [root_password, value] }
        run_list: ["yum",
                   "matrix::leader"]

outputs:
  private_key:
    description: SSH Private Key
    value: { get_attr: [ssh_key, private_key] }

  leader_ip:
    value: { get_attr: [leader_server, accessIPv4]}

  compute_ips:
    value: { get_attr: [compute_servers, accessIPv4] }
